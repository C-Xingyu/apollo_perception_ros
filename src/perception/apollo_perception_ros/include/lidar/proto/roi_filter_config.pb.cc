// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: roi_filter_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "roi_filter_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo_perception_standalone {
namespace roi_filter_config {
class ModelConfigsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModelConfigs> {
} _ModelConfigs_default_instance_;

namespace protobuf_roi_5ffilter_5fconfig_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelConfigs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelConfigs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelConfigs, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelConfigs, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelConfigs, roi_x_min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelConfigs, roi_x_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelConfigs, roi_y_min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelConfigs, roi_y_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelConfigs, roi_z_min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelConfigs, roi_z_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelConfigs, dist_gplane_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 14, sizeof(ModelConfigs)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModelConfigs_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "roi_filter_config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _ModelConfigs_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  ModelConfigs::_default_name_.Shutdown();
  ModelConfigs::_default_version_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ModelConfigs::_default_name_.DefaultConstruct();
  *ModelConfigs::_default_name_.get_mutable() = ::std::string("ROIFilter", 9);
  ModelConfigs::_default_version_.DefaultConstruct();
  *ModelConfigs::_default_version_.get_mutable() = ::std::string("1.0.0", 5);
  _ModelConfigs_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\027roi_filter_config.proto\022.apollo_percep"
      "tion_standalone.roi_filter_config\"\347\001\n\014Mo"
      "delConfigs\022\027\n\004name\030\001 \001(\t:\tROIFilter\022\026\n\007v"
      "ersion\030\002 \001(\t:\0051.0.0\022\026\n\troi_x_min\030\003 \001(\001:\003"
      "-15\022\025\n\troi_x_max\030\004 \001(\001:\00215\022\026\n\troi_y_min\030"
      "\005 \001(\001:\003-45\022\025\n\troi_y_max\030\006 \001(\001:\00245\022\027\n\troi"
      "_z_min\030\007 \001(\001:\004-1.7\022\025\n\troi_z_max\030\010 \001(\001:\0021"
      "5\022\030\n\013dist_gplane\030\t \001(\001:\0030.3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 307);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "roi_filter_config.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_roi_5ffilter_5fconfig_2eproto


// ===================================================================

::google::protobuf::internal::ExplicitlyConstructed< ::std::string> ModelConfigs::_default_name_;
::google::protobuf::internal::ExplicitlyConstructed< ::std::string> ModelConfigs::_default_version_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelConfigs::kNameFieldNumber;
const int ModelConfigs::kVersionFieldNumber;
const int ModelConfigs::kRoiXMinFieldNumber;
const int ModelConfigs::kRoiXMaxFieldNumber;
const int ModelConfigs::kRoiYMinFieldNumber;
const int ModelConfigs::kRoiYMaxFieldNumber;
const int ModelConfigs::kRoiZMinFieldNumber;
const int ModelConfigs::kRoiZMaxFieldNumber;
const int ModelConfigs::kDistGplaneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelConfigs::ModelConfigs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_roi_5ffilter_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo_perception_standalone.roi_filter_config.ModelConfigs)
}
ModelConfigs::ModelConfigs(const ModelConfigs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&ModelConfigs::_default_name_.get());
  if (from.has_name()) {
    name_.AssignWithDefault(&ModelConfigs::_default_name_.get(), from.name_);
  }
  version_.UnsafeSetDefault(&ModelConfigs::_default_version_.get());
  if (from.has_version()) {
    version_.AssignWithDefault(&ModelConfigs::_default_version_.get(), from.version_);
  }
  ::memcpy(&roi_x_min_, &from.roi_x_min_,
    reinterpret_cast<char*>(&dist_gplane_) -
    reinterpret_cast<char*>(&roi_x_min_) + sizeof(dist_gplane_));
  // @@protoc_insertion_point(copy_constructor:apollo_perception_standalone.roi_filter_config.ModelConfigs)
}

void ModelConfigs::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&ModelConfigs::_default_name_.get());
  version_.UnsafeSetDefault(&ModelConfigs::_default_version_.get());
  roi_x_min_ = -15;
  roi_x_max_ = 15;
  roi_y_min_ = -45;
  roi_y_max_ = 45;
  roi_z_min_ = -1.7;
  roi_z_max_ = 15;
  dist_gplane_ = 0.3;
}

ModelConfigs::~ModelConfigs() {
  // @@protoc_insertion_point(destructor:apollo_perception_standalone.roi_filter_config.ModelConfigs)
  SharedDtor();
}

void ModelConfigs::SharedDtor() {
  name_.DestroyNoArena(&ModelConfigs::_default_name_.get());
  version_.DestroyNoArena(&ModelConfigs::_default_version_.get());
}

void ModelConfigs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModelConfigs::descriptor() {
  protobuf_roi_5ffilter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_roi_5ffilter_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelConfigs& ModelConfigs::default_instance() {
  protobuf_roi_5ffilter_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModelConfigs* ModelConfigs::New(::google::protobuf::Arena* arena) const {
  ModelConfigs* n = new ModelConfigs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModelConfigs::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo_perception_standalone.roi_filter_config.ModelConfigs)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&ModelConfigs::_default_name_.get()));
      (*name_.UnsafeRawStringPointer())->assign(*&ModelConfigs::_default_name_.get());
    }
    if (has_version()) {
      GOOGLE_DCHECK(!version_.IsDefault(&ModelConfigs::_default_version_.get()));
      (*version_.UnsafeRawStringPointer())->assign(*&ModelConfigs::_default_version_.get());
    }
    roi_x_min_ = -15;
    roi_x_max_ = 15;
    roi_y_min_ = -45;
    roi_y_max_ = 45;
    roi_z_min_ = -1.7;
    roi_z_max_ = 15;
  }
  dist_gplane_ = 0.3;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ModelConfigs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo_perception_standalone.roi_filter_config.ModelConfigs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1 [default = "ROIFilter"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo_perception_standalone.roi_filter_config.ModelConfigs.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version = 2 [default = "1.0.0"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo_perception_standalone.roi_filter_config.ModelConfigs.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double roi_x_min = 3 [default = -15];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_roi_x_min();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &roi_x_min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double roi_x_max = 4 [default = 15];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_roi_x_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &roi_x_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double roi_y_min = 5 [default = -45];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_roi_y_min();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &roi_y_min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double roi_y_max = 6 [default = 45];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_roi_y_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &roi_y_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double roi_z_min = 7 [default = -1.7];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_roi_z_min();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &roi_z_min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double roi_z_max = 8 [default = 15];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u)) {
          set_has_roi_z_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &roi_z_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double dist_gplane = 9 [default = 0.3];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u)) {
          set_has_dist_gplane();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dist_gplane_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo_perception_standalone.roi_filter_config.ModelConfigs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo_perception_standalone.roi_filter_config.ModelConfigs)
  return false;
#undef DO_
}

void ModelConfigs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo_perception_standalone.roi_filter_config.ModelConfigs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1 [default = "ROIFilter"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo_perception_standalone.roi_filter_config.ModelConfigs.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string version = 2 [default = "1.0.0"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo_perception_standalone.roi_filter_config.ModelConfigs.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // optional double roi_x_min = 3 [default = -15];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->roi_x_min(), output);
  }

  // optional double roi_x_max = 4 [default = 15];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->roi_x_max(), output);
  }

  // optional double roi_y_min = 5 [default = -45];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->roi_y_min(), output);
  }

  // optional double roi_y_max = 6 [default = 45];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->roi_y_max(), output);
  }

  // optional double roi_z_min = 7 [default = -1.7];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->roi_z_min(), output);
  }

  // optional double roi_z_max = 8 [default = 15];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->roi_z_max(), output);
  }

  // optional double dist_gplane = 9 [default = 0.3];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->dist_gplane(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo_perception_standalone.roi_filter_config.ModelConfigs)
}

::google::protobuf::uint8* ModelConfigs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo_perception_standalone.roi_filter_config.ModelConfigs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1 [default = "ROIFilter"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo_perception_standalone.roi_filter_config.ModelConfigs.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string version = 2 [default = "1.0.0"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo_perception_standalone.roi_filter_config.ModelConfigs.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // optional double roi_x_min = 3 [default = -15];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->roi_x_min(), target);
  }

  // optional double roi_x_max = 4 [default = 15];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->roi_x_max(), target);
  }

  // optional double roi_y_min = 5 [default = -45];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->roi_y_min(), target);
  }

  // optional double roi_y_max = 6 [default = 45];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->roi_y_max(), target);
  }

  // optional double roi_z_min = 7 [default = -1.7];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->roi_z_min(), target);
  }

  // optional double roi_z_max = 8 [default = 15];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->roi_z_max(), target);
  }

  // optional double dist_gplane = 9 [default = 0.3];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->dist_gplane(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo_perception_standalone.roi_filter_config.ModelConfigs)
  return target;
}

size_t ModelConfigs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo_perception_standalone.roi_filter_config.ModelConfigs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 1 [default = "ROIFilter"];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string version = 2 [default = "1.0.0"];
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional double roi_x_min = 3 [default = -15];
    if (has_roi_x_min()) {
      total_size += 1 + 8;
    }

    // optional double roi_x_max = 4 [default = 15];
    if (has_roi_x_max()) {
      total_size += 1 + 8;
    }

    // optional double roi_y_min = 5 [default = -45];
    if (has_roi_y_min()) {
      total_size += 1 + 8;
    }

    // optional double roi_y_max = 6 [default = 45];
    if (has_roi_y_max()) {
      total_size += 1 + 8;
    }

    // optional double roi_z_min = 7 [default = -1.7];
    if (has_roi_z_min()) {
      total_size += 1 + 8;
    }

    // optional double roi_z_max = 8 [default = 15];
    if (has_roi_z_max()) {
      total_size += 1 + 8;
    }

  }
  // optional double dist_gplane = 9 [default = 0.3];
  if (has_dist_gplane()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModelConfigs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo_perception_standalone.roi_filter_config.ModelConfigs)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelConfigs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelConfigs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo_perception_standalone.roi_filter_config.ModelConfigs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo_perception_standalone.roi_filter_config.ModelConfigs)
    MergeFrom(*source);
  }
}

void ModelConfigs::MergeFrom(const ModelConfigs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo_perception_standalone.roi_filter_config.ModelConfigs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&ModelConfigs::_default_name_.get(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_version();
      version_.AssignWithDefault(&ModelConfigs::_default_version_.get(), from.version_);
    }
    if (cached_has_bits & 0x00000004u) {
      roi_x_min_ = from.roi_x_min_;
    }
    if (cached_has_bits & 0x00000008u) {
      roi_x_max_ = from.roi_x_max_;
    }
    if (cached_has_bits & 0x00000010u) {
      roi_y_min_ = from.roi_y_min_;
    }
    if (cached_has_bits & 0x00000020u) {
      roi_y_max_ = from.roi_y_max_;
    }
    if (cached_has_bits & 0x00000040u) {
      roi_z_min_ = from.roi_z_min_;
    }
    if (cached_has_bits & 0x00000080u) {
      roi_z_max_ = from.roi_z_max_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_dist_gplane(from.dist_gplane());
  }
}

void ModelConfigs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo_perception_standalone.roi_filter_config.ModelConfigs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelConfigs::CopyFrom(const ModelConfigs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo_perception_standalone.roi_filter_config.ModelConfigs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelConfigs::IsInitialized() const {
  return true;
}

void ModelConfigs::Swap(ModelConfigs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelConfigs::InternalSwap(ModelConfigs* other) {
  name_.Swap(&other->name_);
  version_.Swap(&other->version_);
  std::swap(roi_x_min_, other->roi_x_min_);
  std::swap(roi_x_max_, other->roi_x_max_);
  std::swap(roi_y_min_, other->roi_y_min_);
  std::swap(roi_y_max_, other->roi_y_max_);
  std::swap(roi_z_min_, other->roi_z_min_);
  std::swap(roi_z_max_, other->roi_z_max_);
  std::swap(dist_gplane_, other->dist_gplane_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModelConfigs::GetMetadata() const {
  protobuf_roi_5ffilter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_roi_5ffilter_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModelConfigs

// optional string name = 1 [default = "ROIFilter"];
bool ModelConfigs::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ModelConfigs::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ModelConfigs::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ModelConfigs::clear_name() {
  name_.ClearToDefaultNoArena(&ModelConfigs::_default_name_.get());
  clear_has_name();
}
const ::std::string& ModelConfigs::name() const {
  // @@protoc_insertion_point(field_get:apollo_perception_standalone.roi_filter_config.ModelConfigs.name)
  return name_.GetNoArena();
}
void ModelConfigs::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&ModelConfigs::_default_name_.get(), value);
  // @@protoc_insertion_point(field_set:apollo_perception_standalone.roi_filter_config.ModelConfigs.name)
}
#if LANG_CXX11
void ModelConfigs::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &ModelConfigs::_default_name_.get(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo_perception_standalone.roi_filter_config.ModelConfigs.name)
}
#endif
void ModelConfigs::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&ModelConfigs::_default_name_.get(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo_perception_standalone.roi_filter_config.ModelConfigs.name)
}
void ModelConfigs::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&ModelConfigs::_default_name_.get(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo_perception_standalone.roi_filter_config.ModelConfigs.name)
}
::std::string* ModelConfigs::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo_perception_standalone.roi_filter_config.ModelConfigs.name)
  return name_.MutableNoArena(&ModelConfigs::_default_name_.get());
}
::std::string* ModelConfigs::release_name() {
  // @@protoc_insertion_point(field_release:apollo_perception_standalone.roi_filter_config.ModelConfigs.name)
  clear_has_name();
  return name_.ReleaseNoArena(&ModelConfigs::_default_name_.get());
}
void ModelConfigs::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&ModelConfigs::_default_name_.get(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo_perception_standalone.roi_filter_config.ModelConfigs.name)
}

// optional string version = 2 [default = "1.0.0"];
bool ModelConfigs::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ModelConfigs::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void ModelConfigs::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void ModelConfigs::clear_version() {
  version_.ClearToDefaultNoArena(&ModelConfigs::_default_version_.get());
  clear_has_version();
}
const ::std::string& ModelConfigs::version() const {
  // @@protoc_insertion_point(field_get:apollo_perception_standalone.roi_filter_config.ModelConfigs.version)
  return version_.GetNoArena();
}
void ModelConfigs::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&ModelConfigs::_default_version_.get(), value);
  // @@protoc_insertion_point(field_set:apollo_perception_standalone.roi_filter_config.ModelConfigs.version)
}
#if LANG_CXX11
void ModelConfigs::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &ModelConfigs::_default_version_.get(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo_perception_standalone.roi_filter_config.ModelConfigs.version)
}
#endif
void ModelConfigs::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&ModelConfigs::_default_version_.get(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo_perception_standalone.roi_filter_config.ModelConfigs.version)
}
void ModelConfigs::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&ModelConfigs::_default_version_.get(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo_perception_standalone.roi_filter_config.ModelConfigs.version)
}
::std::string* ModelConfigs::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:apollo_perception_standalone.roi_filter_config.ModelConfigs.version)
  return version_.MutableNoArena(&ModelConfigs::_default_version_.get());
}
::std::string* ModelConfigs::release_version() {
  // @@protoc_insertion_point(field_release:apollo_perception_standalone.roi_filter_config.ModelConfigs.version)
  clear_has_version();
  return version_.ReleaseNoArena(&ModelConfigs::_default_version_.get());
}
void ModelConfigs::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&ModelConfigs::_default_version_.get(), version);
  // @@protoc_insertion_point(field_set_allocated:apollo_perception_standalone.roi_filter_config.ModelConfigs.version)
}

// optional double roi_x_min = 3 [default = -15];
bool ModelConfigs::has_roi_x_min() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ModelConfigs::set_has_roi_x_min() {
  _has_bits_[0] |= 0x00000004u;
}
void ModelConfigs::clear_has_roi_x_min() {
  _has_bits_[0] &= ~0x00000004u;
}
void ModelConfigs::clear_roi_x_min() {
  roi_x_min_ = -15;
  clear_has_roi_x_min();
}
double ModelConfigs::roi_x_min() const {
  // @@protoc_insertion_point(field_get:apollo_perception_standalone.roi_filter_config.ModelConfigs.roi_x_min)
  return roi_x_min_;
}
void ModelConfigs::set_roi_x_min(double value) {
  set_has_roi_x_min();
  roi_x_min_ = value;
  // @@protoc_insertion_point(field_set:apollo_perception_standalone.roi_filter_config.ModelConfigs.roi_x_min)
}

// optional double roi_x_max = 4 [default = 15];
bool ModelConfigs::has_roi_x_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ModelConfigs::set_has_roi_x_max() {
  _has_bits_[0] |= 0x00000008u;
}
void ModelConfigs::clear_has_roi_x_max() {
  _has_bits_[0] &= ~0x00000008u;
}
void ModelConfigs::clear_roi_x_max() {
  roi_x_max_ = 15;
  clear_has_roi_x_max();
}
double ModelConfigs::roi_x_max() const {
  // @@protoc_insertion_point(field_get:apollo_perception_standalone.roi_filter_config.ModelConfigs.roi_x_max)
  return roi_x_max_;
}
void ModelConfigs::set_roi_x_max(double value) {
  set_has_roi_x_max();
  roi_x_max_ = value;
  // @@protoc_insertion_point(field_set:apollo_perception_standalone.roi_filter_config.ModelConfigs.roi_x_max)
}

// optional double roi_y_min = 5 [default = -45];
bool ModelConfigs::has_roi_y_min() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ModelConfigs::set_has_roi_y_min() {
  _has_bits_[0] |= 0x00000010u;
}
void ModelConfigs::clear_has_roi_y_min() {
  _has_bits_[0] &= ~0x00000010u;
}
void ModelConfigs::clear_roi_y_min() {
  roi_y_min_ = -45;
  clear_has_roi_y_min();
}
double ModelConfigs::roi_y_min() const {
  // @@protoc_insertion_point(field_get:apollo_perception_standalone.roi_filter_config.ModelConfigs.roi_y_min)
  return roi_y_min_;
}
void ModelConfigs::set_roi_y_min(double value) {
  set_has_roi_y_min();
  roi_y_min_ = value;
  // @@protoc_insertion_point(field_set:apollo_perception_standalone.roi_filter_config.ModelConfigs.roi_y_min)
}

// optional double roi_y_max = 6 [default = 45];
bool ModelConfigs::has_roi_y_max() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ModelConfigs::set_has_roi_y_max() {
  _has_bits_[0] |= 0x00000020u;
}
void ModelConfigs::clear_has_roi_y_max() {
  _has_bits_[0] &= ~0x00000020u;
}
void ModelConfigs::clear_roi_y_max() {
  roi_y_max_ = 45;
  clear_has_roi_y_max();
}
double ModelConfigs::roi_y_max() const {
  // @@protoc_insertion_point(field_get:apollo_perception_standalone.roi_filter_config.ModelConfigs.roi_y_max)
  return roi_y_max_;
}
void ModelConfigs::set_roi_y_max(double value) {
  set_has_roi_y_max();
  roi_y_max_ = value;
  // @@protoc_insertion_point(field_set:apollo_perception_standalone.roi_filter_config.ModelConfigs.roi_y_max)
}

// optional double roi_z_min = 7 [default = -1.7];
bool ModelConfigs::has_roi_z_min() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ModelConfigs::set_has_roi_z_min() {
  _has_bits_[0] |= 0x00000040u;
}
void ModelConfigs::clear_has_roi_z_min() {
  _has_bits_[0] &= ~0x00000040u;
}
void ModelConfigs::clear_roi_z_min() {
  roi_z_min_ = -1.7;
  clear_has_roi_z_min();
}
double ModelConfigs::roi_z_min() const {
  // @@protoc_insertion_point(field_get:apollo_perception_standalone.roi_filter_config.ModelConfigs.roi_z_min)
  return roi_z_min_;
}
void ModelConfigs::set_roi_z_min(double value) {
  set_has_roi_z_min();
  roi_z_min_ = value;
  // @@protoc_insertion_point(field_set:apollo_perception_standalone.roi_filter_config.ModelConfigs.roi_z_min)
}

// optional double roi_z_max = 8 [default = 15];
bool ModelConfigs::has_roi_z_max() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ModelConfigs::set_has_roi_z_max() {
  _has_bits_[0] |= 0x00000080u;
}
void ModelConfigs::clear_has_roi_z_max() {
  _has_bits_[0] &= ~0x00000080u;
}
void ModelConfigs::clear_roi_z_max() {
  roi_z_max_ = 15;
  clear_has_roi_z_max();
}
double ModelConfigs::roi_z_max() const {
  // @@protoc_insertion_point(field_get:apollo_perception_standalone.roi_filter_config.ModelConfigs.roi_z_max)
  return roi_z_max_;
}
void ModelConfigs::set_roi_z_max(double value) {
  set_has_roi_z_max();
  roi_z_max_ = value;
  // @@protoc_insertion_point(field_set:apollo_perception_standalone.roi_filter_config.ModelConfigs.roi_z_max)
}

// optional double dist_gplane = 9 [default = 0.3];
bool ModelConfigs::has_dist_gplane() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ModelConfigs::set_has_dist_gplane() {
  _has_bits_[0] |= 0x00000100u;
}
void ModelConfigs::clear_has_dist_gplane() {
  _has_bits_[0] &= ~0x00000100u;
}
void ModelConfigs::clear_dist_gplane() {
  dist_gplane_ = 0.3;
  clear_has_dist_gplane();
}
double ModelConfigs::dist_gplane() const {
  // @@protoc_insertion_point(field_get:apollo_perception_standalone.roi_filter_config.ModelConfigs.dist_gplane)
  return dist_gplane_;
}
void ModelConfigs::set_dist_gplane(double value) {
  set_has_dist_gplane();
  dist_gplane_ = value;
  // @@protoc_insertion_point(field_set:apollo_perception_standalone.roi_filter_config.ModelConfigs.dist_gplane)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace roi_filter_config
}  // namespace apollo_perception_standalone

// @@protoc_insertion_point(global_scope)
